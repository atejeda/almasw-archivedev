## define template variables
#set($guide_phrases = $template_helper["phrases"])
#set($guide = $template_helper["guide"])
#set($guide_class = "Test_" + $guide)
#set($uri = $template_helper["uri"])
"""
This is a generated helper module for $uri casa guide module
all modified changes will be lost in the next code generation

The method to execute is set in locals() at runtime, is injected
by the regression test executor.

This is an autogenerated class for $uri guide testing purposes,
all the modified code will be re-written in the next code generation.

The module will help the following keyword-phrases:

#foreach ($phrase in $guide_phrases)
test_$phrase[2] "$phrase[0]"#end

"""

import sys

# assert sys.version >= '2' and sys.version_info.minor >= 7, "Python 2.7 or greater is supported"
# assert globals().has_key("IPython"), "IPython environment is needed for this module (%s)" % __file__
# assert globals().has_key("casa"), "CASA environment is needed for this module (%s)" % __file__

import os

from testc.regression.helper import injectEnv

__test__ = False

#foreach ($phrase in $guide_phrases)
@injectEnv
def test_${phrase[2]}_${phrase[3]}():
	""" "${phrase[0]}"
	"""
	casalog.origin("test_${phrase[2]}_${phrase[3]}")
	casalog.post("starting")

#foreach ($content in $phrase[1].split("\n"))
#set($tabbed_content = "\t" + $content)${tabbed_content}#end#end